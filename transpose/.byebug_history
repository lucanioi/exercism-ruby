exit
t; expected
t
p t
t =  Transpose.transpose(input)
exit
p expected
p Transpose.transpose(input)
different
diferent
expected.chars.each_with_index { |c, i| different << [c, i] if c != Transpose.transpose(input)[i] }
different = []
expected == Transpose.transpose(input)
puts expected
puts Transpose.transpose(input)
exit
puts standarize(input.lines.map(&:chomp)).map(&:chars).transpose.map(&:join).join("\n")
standarize(input.lines.map(&:chomp)).map(&:chars).transpose.map(&:join).join("\n")
standarize(input.lines.map(&:chomp)).map(&:chars).map(&:chars).map(&:chars)
        .transpose
        .map(&:chars)
standarize(input.lines.map(&:chomp))
